[versions]
classgraph = "4.8.181"
compose-multiplatform = "1.10.0-alpha01"
kotlin = "2.2.10"
kotlinx-coroutines = "1.10.2"
kotlinx-serialization = "1.9.0"
kotlinx-datetime = "0.7.1"
# core
postgres = "42.7.7"
hikari = "7.0.2"
spring-jdbc = "7.0.0-M8"
# api-server
ktor = "3.2.3"
# koin
koin = "4.1.0"
#test/log
junit = "6.0.0-RC2"
assertj-core = "3.27.3"
mockk = "1.14.5"
logback = "1.5.18"
kotlin-logging = "7.0.13"
[libraries]
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "kotlinx-datetime" }
classgraph = { group = "io.github.classgraph", name = "classgraph", version.ref = "classgraph" }
mockk = { group = "io.mockk", name = "mockk", version.ref = "mockk" }
# core
kotlin-reflect = { group = "org.jetbrains.kotlin", name = "kotlin-reflect" }
hikari = { group = "com.zaxxer", name = "HikariCP", version.ref = "hikari" }
postgres = { group = "org.postgresql", name = "postgresql", version.ref = "postgres" }
spring-jdbc = { group = "org.springframework", name = "spring-jdbc", version.ref = "spring-jdbc" }
#api server
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-content-negotiation = { group = "io.ktor", name = "ktor-server-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor"}
ktor-server-cors = { group = "io.ktor", name = "ktor-server-cors", version.ref = "ktor" }
#api client
ktor-client-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-client-js = { group = "io.ktor", name = "ktor-client-js", version.ref = "ktor" }
ktor-client-content-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
# Koin
koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core" }
koin-compose = { module = "io.insert-koin:koin-compose" }
koin-slf4j = { module = "io.insert-koin:koin-logger-slf4j" }
# test / log
# JUnit 5 - tylko co potrzebne
junit-bom = { group = "org.junit", name = "junit-bom", version.ref = "junit" }
junit-jupiter-api = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref = "junit" }
junit-jupiter-engine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "junit" }
junit-platform-launcher = { group = "org.junit.platform", name = "junit-platform-launcher", version.ref = "junit" }
assertj-core = { group = "org.assertj", name = "assertj-core", version.ref = "assertj-core" }

logback-classic = { group = "ch.qos.logback", name = "logback-classic", version.ref = "logback" }
kotlin-logging-jvm = { group = "io.github.oshai", name = "kotlin-logging-jvm", version.ref = "kotlin-logging" }
[plugins]
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
